% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lama_translate_all.R
\name{lama_translate_all}
\alias{lama_translate_all}
\alias{lama_translate_all.data.frame}
\title{Assign new labels to all variables of a data.frame}
\usage{
lama_translate_all(.data, dictionary, prefix = "", suffix = "",
  fn_colname = function(x) x, keep_order = FALSE)

\method{lama_translate_all}{data.frame}(.data, dictionary, prefix = "",
  suffix = "", fn_colname = function(x) x, keep_order = FALSE)
}
\arguments{
\item{.data}{Either a data frame, a factor or a vector.}

\item{dictionary}{A \link[=new_lama_dictionary]{lama_dictionary} object,
holding the translations for various variables.}

\item{prefix}{A character string, which is used as prefix for the new
column names.}

\item{suffix}{A character string, which is used as suffix for the new
column names.}

\item{fn_colname}{A function, which transforms character string into a new
character string. This function will be used to transform the old column
names into new column names under which the labeled variables will then
be stored.}

\item{keep_order}{A logical of length one, defining if the original order
(factor order or alphanumerical order) of the data frame variables should
be preserved.}
}
\value{
An extended data.frame, that has a factor variable holding the
assigned labels.
}
\description{
Converts all variables (which have a translation in the given lama-dictionary)
of a data frame \code{.data}
into factor variables with new labels.
This function a special version of the function \code{\link[=lama_translate]{lama_translate()}}.
The difference to \code{\link[=lama_translate]{lama_translate()}} is, that when using \code{\link[=lama_translate_all]{lama_translate_all()}}
the used translations in \code{dictionary} must have the exact
same names as the corresponding columns in the data frame \code{.data}.
}
\examples{
  ## initialize lama_dictinoary
  dict <- new_lama_dictionary(
    subject = c(en = "English", ma = "Mathematics"),
    result = c("1" = "Very good", "2" = "Good", "3" = "Not so good")
  )
  ## data frame which should be translated
  df <- data.frame(
    pupil = c(1, 1, 2, 2, 3),
    subject = c("en", "ma", "ma", "en", "en"),
    result = c(1, 2, 3, 2, 2)
  )
  
  ## Example-1: Use 'prefix'
  # (apply translation 'subject' to column 'subject' and save it to column 'new_subject')
  # (apply translation 'result' to column 'result' and save it to column 'new_result')
  df_new <- lama_translate_all(df, dict, prefix = "new_")
  str(df_new)

  # Example-2: Use 'suffix'
  # (apply translation 'subject' to column 'subject' and save it to column 'subject_new')
  # (apply translation 'result' to column 'result' and save it to column 'result_new')
  df_new <- lama_translate_all(df, dict, suffix = "_new")
  str(df_new)

  # Example-3: Use 'fn_colname'
  # (apply translation 'subject' to column 'subject' and save it to column 'SUBJECT')
  # (apply translation 'result' to column 'result' and save it to column 'RESULT')
  df_new <- lama_translate_all(df, dict, fn_colname = toupper)
  str(df_new)
}
